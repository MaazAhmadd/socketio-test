generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_PG_REMOTE")
  // url      = env("DATABASE_URL_PG_LOCAL")
  // provider = "sqlite"
  // url      = env("DATABASE_URL_SQLITE")
}

model Member {
  id          String  @id @default(uuid())
  name        String?
  handle      String
  pfp         String?
  isConnected Boolean
  isLeader    Boolean
  mic         Boolean
  leaderPC    Int  // leader priority counter
  Room        Room?   @relation(fields: [roomId], references: [id], onDelete: Cascade)
  roomId      String?

  @@index([handle])
}

model VideoPlayer {
  id            String  @id @default(uuid())
  isPlaying     Boolean // paused/playing
  sourceUrl     String // source url of video @map("source")
  thumbnailUrl  String // thumbnail url of video
  title         String // title of the video
  totalDuration Int // total duration of the video
  playedTill    Int // time till the video has been played or from where the video is currently playing from
  Room          Room?   @relation(fields: [roomId], references: [id], onDelete: Cascade)
  roomId        String  @unique
}

model Room {
  id          String       @id @default(uuid())
  members     Member[]
  videoPlayer VideoPlayer?
  privacy     String       @default("Public")
  playback    String       @default("voting")
  roomMic     Boolean
  kicked      String // store JSON.stringify(["handle1","handle2"])
}

model YtVideo {
  id        String   @id @default(uuid())
  ytId      String   @unique
  thumbnail String
  title     String
  duration  String
  updatedAt DateTime @default(now()) @updatedAt()
}
